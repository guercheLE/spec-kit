#!/usr/bin/env bash
# Create specify-request.md with branch tracking information
set -e

FEATURE_DESCRIPTION="$1"
if [ -z "$FEATURE_DESCRIPTION" ]; then
    echo "Usage: $0 <feature_description>" >&2
    exit 1
fi

REPO_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
    echo "ERROR: Not in a git repository" >&2
    exit 1
fi

# Get next branch number from project state
PROJECT_STATE_RESULT=$("$REPO_ROOT/.specify/scripts/bash/analyze-project-state.sh" --json)
NEXT_BRANCH_NUMBER=$(echo "$PROJECT_STATE_RESULT" | jq -r '.next_branch_number')

# Create specify-request.md
SPECIFY_REQUEST="$REPO_ROOT/specify-request.md"
cat > "$SPECIFY_REQUEST" << EOF
# Feature Specification Request

**Requested**: $(date +"%Y-%m-%d %H:%M:%S")
**Branch Number**: $NEXT_BRANCH_NUMBER (format: feature/$(printf "%03d" $NEXT_BRANCH_NUMBER)-{feature-name})
**Status**: Pending

## Feature Description
$FEATURE_DESCRIPTION

## Workflow Rules
- Global files (orchestration-plan.md, execution-plan.json, specify-request.md) committed on main branch
- Spec files (spec.md, plan.md, tasks.md) committed on feature branch
- Complete full spec (specify → plan → tasks) before moving to next feature
- No implementation - only specification, planning, and task breakdown
- Each feature must be self-contained and complete

## Branch Tracking
- Last used number: $((NEXT_BRANCH_NUMBER - 1))
- Next available: $NEXT_BRANCH_NUMBER
- Branch format: feature/{number:03d}-{name}

## Process
1. /specify - Create specification on feature branch
2. /plan - Create implementation plan on feature branch  
3. /tasks - Create task breakdown on feature branch
4. Return to main branch before next feature

---
Generated by: .specify/scripts/bash/create-specify-request.sh
EOF

echo "Created: $SPECIFY_REQUEST"
echo "Next branch number: $NEXT_BRANCH_NUMBER"
